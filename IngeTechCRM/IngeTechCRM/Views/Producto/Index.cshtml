@model List<IngeTechCRM.Models.Producto>
@{
    ViewData["Title"] = "Administración de Productos";
}

<div class="container mx-auto px-4 py-6">
    <div class="mb-6 flex flex-col items-start justify-between space-y-4 md:flex-row md:items-center md:space-y-0">
        <h1 class="text-2xl font-bold text-gray-800 md:text-3xl">Administración de Productos</h1>

        <div class="flex space-x-2">
            <a href="@Url.Action("Crear")" class="flex items-center rounded-lg bg-green-600 px-4 py-2 font-medium text-white shadow-sm transition hover:bg-green-700">
                <i class="fas fa-plus-circle mr-2"></i> Nuevo Producto
            </a>
            <div class="relative" id="adminDropdown">
                <button type="button" class="flex items-center rounded-lg bg-indigo-600 px-4 py-2 font-medium text-white shadow-sm transition hover:bg-indigo-700" id="btnAdminDropdown">
                    <i class="fas fa-cog mr-2"></i> Administrar
                    <i class="fas fa-chevron-down ml-2 text-xs"></i>
                </button>
                <div class="absolute right-0 z-10 mt-2 hidden w-56 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5" id="adminDropdownMenu">
                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" href="@Url.Action("Categorias")">
                        <i class="fas fa-tags mr-2 text-indigo-500"></i> Categorías
                    </a>
                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" href="@Url.Action("Marcas")">
                        <i class="fas fa-copyright mr-2 text-indigo-500"></i> Marcas
                    </a>
                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" href="@Url.Action("Proveedores")">
                        <i class="fas fa-truck mr-2 text-indigo-500"></i> Proveedores
                    </a>
                    <div class="my-1 border-t border-gray-200"></div>
                    <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" href="@Url.Action("ProductosInactivos")">
                        <i class="fas fa-archive mr-2 text-indigo-500"></i> Productos Inactivos
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros y búsqueda -->
    <div class="mb-6 overflow-hidden rounded-xl bg-white shadow-lg">
        <div class="bg-gradient-to-r from-indigo-600 to-blue-500 px-4 py-3 text-white">
            <h2 class="flex items-center font-bold">
                <i class="fas fa-search mr-2"></i> Búsqueda y Filtros
            </h2>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 gap-6 lg:grid-cols-3">
                <div class="lg:col-span-2">
                    <div class="flex flex-wrap items-center gap-2">
                        <div class="flex flex-1 rounded-lg border border-gray-300 bg-white">
                            <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                <i class="fas fa-search text-gray-400"></i>
                            </div>
                            <input type="text"
                                   class="w-full flex-1 rounded-lg border-0 pl-10 pr-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50"
                                   placeholder="Buscar por nombre, código..."
                                   id="buscarProducto">
                        </div>

                        <button type="button"
                                class="inline-flex items-center rounded-lg border border-gray-300 bg-white px-4 py-2 font-medium text-gray-700 shadow-sm hover:bg-gray-50"
                                id="btnFiltros">
                            <i class="fas fa-filter mr-2 text-indigo-500"></i> Filtros
                        </button>

                        <button type="button"
                                class="inline-flex items-center rounded-lg border border-gray-300 bg-white px-4 py-2 font-medium text-gray-700 shadow-sm hover:bg-gray-50"
                                id="btnLimpiar">
                            <i class="fas fa-times mr-2 text-red-500"></i> Limpiar
                        </button>
                    </div>

                    <div class="mt-4 hidden rounded-lg border border-gray-200 bg-gray-50 p-4" id="filtrosAvanzados">
                        <h3 class="mb-4 font-medium text-gray-700">Filtros avanzados</h3>
                        <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
                            <div>
                                <label for="filtroCategoria" class="mb-2 block text-sm font-medium text-gray-700">Categoría</label>
                                <select class="block w-full rounded-lg border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 filtro-select"
                                        id="filtroCategoria"
                                        data-columna="2" <!-- El índice de la columna de categoría (0-based) -->
                                >
                                    <option value="">Todas</option>
                                    @{
                                        // Extraer categorías únicas de los productos
                                        var categorias = Model.Select(p => p.Categoria?.NOMBRE).Distinct().OrderBy(c => c);
                                        foreach (var categoria in categorias)
                                        {
                                            if (!string.IsNullOrEmpty(categoria))
                                            {
                                                            <option value="@categoria">@categoria</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div>
                                <label for="filtroMarca" class="mb-2 block text-sm font-medium text-gray-700">Marca</label>
                                <select class="block w-full rounded-lg border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 filtro-select"
                                        id="filtroMarca"
                                        data-columna="3" <!-- El índice de la columna de marca (0-based) -->
                                >
                                    <option value="">Todas</option>
                                    @{
                                        // Extraer marcas únicas de los productos
                                        var marcas = Model.Select(p => p.Marca?.NOMBRE).Distinct().OrderBy(m => m);
                                        foreach (var marca in marcas)
                                        {
                                            if (!string.IsNullOrEmpty(marca))
                                            {
                                                            <option value="@marca">@marca</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div>
                                <label for="filtroEstado" class="mb-2 block text-sm font-medium text-gray-700">Estado</label>
                                <select class="block w-full rounded-lg border border-gray-300 bg-white px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 filtro-select"
                                        id="filtroEstado"
                                        data-columna="6" <!-- El índice de la columna de estado (0-based) -->
                                >
                                    <option value="">Todos</option>
                                    <option value="Activo">Activo</option>
                                    <option value="Inactivo">Inactivo</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex flex-col space-y-4 rounded-lg bg-indigo-50 p-4 lg:justify-end">
                    <div>
                        <span class="mb-1 block font-medium text-gray-700">Total de productos</span>
                        <div class="flex items-center">
                            <div class="mr-3 flex h-12 w-12 items-center justify-center rounded-full bg-indigo-100 text-xl text-indigo-600">
                                <i class="fas fa-box"></i>
                            </div>
                            <span class="text-2xl font-bold text-indigo-700" id="contadorProductos">@Model.Count</span>
                        </div>
                    </div>

                    <div class="text-sm text-gray-600">
                        <i class="fas fa-info-circle mr-1 text-blue-500"></i>
                        Los resultados se actualizan automáticamente mientras escribe.
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de productos -->
    <div class="rounded-xl bg-white shadow-lg">
        <div class="border-b border-gray-200 bg-gray-50 px-6 py-4">
            <h2 class="font-bold text-gray-800">
                Listado de productos <span class="ml-1 rounded-full bg-indigo-100 px-2 py-1 text-sm text-indigo-800" id="contadorListado">@Model.Count</span>
            </h2>
        </div>

        <div class="p-6">
            @if (Model.Count == 0)
            {
                <div class="rounded-lg bg-blue-50 p-4 text-blue-800">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <i class="fas fa-info-circle text-blue-500"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium">
                                No se encontraron productos.
                            </p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200" id="tablaProductos">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Código
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Nombre
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Categoría
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Marca
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Precio
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Stock Total
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Estado
                                </th>
                                <th scope="col" class="px-6 py-3 text-center text-xs font-medium uppercase tracking-wider text-gray-500">
                                    Acciones
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                            @foreach (var producto in Model)
                            {
                                <tr class="hover:bg-gray-50 fila-producto">
                                    <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                        @producto.CODIGO
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-800">
                                        <a href="@Url.Action("Detalles", new { id = producto.ID_PRODUCTO })" class="font-medium text-indigo-600 hover:text-indigo-900">
                                            @producto.NOMBRE
                                        </a>
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-500">
                                        @producto.Categoria.NOMBRE
                                    </td>
                                    <td class="px-6 py-4 text-sm text-gray-500">
                                        @producto.Marca.NOMBRE
                                    </td>
                                    <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                        @producto.PRECIO.ToString("C2")
                                    </td>
                                    <td class="px-6 py-4 text-sm">
                                        @{
                                            
                                            int stockTotal = producto.Inventarios?.Sum(i => i.CANTIDAD) ?? 0;
                                            var stockColor = stockTotal < 10 ? "text-red-600" : (stockTotal < 30 ? "text-yellow-600" : "text-green-600");
                                        }
                                        <span class="font-medium @stockColor">@stockTotal</span>
                                    </td>
                                    <td class="px-6 py-4 text-sm">
                                        @if (producto.ACTIVO)
                                        {
                                            <span class="inline-flex rounded-full bg-green-100 px-2 py-1 text-xs font-semibold text-green-800">
                                                Activo
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="inline-flex rounded-full bg-red-100 px-2 py-1 text-xs font-semibold text-red-800">
                                                Inactivo
                                            </span>
                                        }
                                    </td>
                                    <td class="px-6 py-4 text-center text-sm font-medium">
                                        <div class="flex justify-center space-x-2">
                                            <a href="@Url.Action("Detalles", new { id = producto.ID_PRODUCTO })"
                                               class="rounded bg-blue-100 p-1.5 text-blue-600 transition hover:bg-blue-200"
                                               title="Ver detalles">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Editar", new { id = producto.ID_PRODUCTO })"
                                               class="rounded bg-indigo-100 p-1.5 text-indigo-600 transition hover:bg-indigo-200"
                                               title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Eliminar", new { id = producto.ID_PRODUCTO })"
                                               class="rounded bg-red-100 p-1.5 text-red-600 transition hover:bg-red-200"
                                               title="Eliminar">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Mensaje para cuando no hay resultados después del filtrado -->
                <div id="noResultados" class="hidden rounded-lg bg-blue-50 p-4 text-blue-800 mt-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <i class="fas fa-info-circle text-blue-500"></i>
                        </div>
                        <div class="ml-3">
                            <p class="text-sm font-medium">
                                No se encontraron productos con los criterios de búsqueda especificados.
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Toggle para mostrar/ocultar filtros avanzados
            $('#btnFiltros').on('click', function() {
                $('#filtrosAvanzados').toggleClass('hidden');
            });

            // Toggle para el menú desplegable de administración
            $('#btnAdminDropdown').on('click', function(e) {
                e.stopPropagation();
                $('#adminDropdownMenu').toggleClass('hidden');
            });

            // Cerrar el menú desplegable al hacer clic fuera
            $(document).on('click', function(e) {
                if (!$(e.target).closest('#adminDropdown').length) {
                    $('#adminDropdownMenu').addClass('hidden');
                }
            });

            // Variables para búsqueda y filtrado
            var $buscarInput = $('#buscarProducto');
            var $filtroSelects = $('.filtro-select');
            var $filasProductos = $('.fila-producto');
            var $tablaProductos = $('#tablaProductos');
            var $noResultados = $('#noResultados');

            // Función para actualizar contadores
                    // Función para actualizar contadores
        function actualizarContadores() {
            var filasVisibles = $filasProductos.filter(':visible').length;
            $('#contadorProductos').text(filasVisibles);
            $('#contadorListado').text(filasVisibles);

            // Mostrar u ocultar mensaje de no resultados
            if (filasVisibles === 0 && $filasProductos.length > 0) {
                // No ocultamos la tabla, solo mostramos el mensaje
                $noResultados.removeClass('hidden');
            } else {
                $noResultados.addClass('hidden');
            }
        }

            // Función para filtrar productos
            function filtrarProductos() {
                var textoBusqueda = $buscarInput.val().toLowerCase();

                // Recopilar valores de filtros avanzados
                var filtros = {};
                $filtroSelects.each(function() {
                    var columna = $(this).data('columna');
                    var valor = $(this).val();
                    if (valor) {
                        filtros[columna] = valor;
                    }
                });

                // Aplicar filtros a cada fila
                $filasProductos.each(function() {
                    var $fila = $(this);
                    var $celdas = $fila.find('td');

                    // Verificar texto de búsqueda (en código y nombre)
                    var codigo = $celdas.eq(0).text().toLowerCase();
                    var nombre = $celdas.eq(1).text().toLowerCase();
                    var coincideBusqueda = !textoBusqueda ||
                                        codigo.includes(textoBusqueda) ||
                                        nombre.includes(textoBusqueda);

                    // Verificar filtros avanzados
                    var coincideFiltros = true;
                    $.each(filtros, function(columna, valor) {
                        var textoCelda = $celdas.eq(columna).text().trim();
                        // Para celdas con varios elementos, como la de estado
                        if (columna == 6) { // Columna de estado
                            textoCelda = $celdas.eq(columna).find('span').text().trim();
                        }

                        if (!textoCelda.includes(valor)) {
                            coincideFiltros = false;
                            return false; // Salir del bucle
                        }
                    });

                    // Mostrar u ocultar fila según resultados
                    if (coincideBusqueda && coincideFiltros) {
                        $fila.show();
                    } else {
                        $fila.hide();
                    }
                });

                // Actualizar contadores
                actualizarContadores();
            }

            // Eventos para realizar filtrado en tiempo real
            $buscarInput.on('input', filtrarProductos);
            $filtroSelects.on('change', filtrarProductos);

            // Botón para limpiar todos los filtros
            $('#btnLimpiar').on('click', function() {
                $buscarInput.val('');
                $filtroSelects.val('');
                $filasProductos.show();
                actualizarContadores();
            });
        });
    </script>
}