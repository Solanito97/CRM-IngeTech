@model IEnumerable<IngeTechCRM.Models.ConversacionWhatsApp>
@{
    ViewData["Title"] = "Gestión de WhatsApp";
}

<div class="container mx-auto px-4 py-8">
    <!-- Breadcrumbs -->
    <nav class="mb-6 flex flex-wrap text-sm">
        <a href="@Url.Action("Index", "Home")" class="text-gray-600 hover:text-indigo-600">Inicio</a>
        <span class="mx-2 text-gray-500">/</span>
        <span class="font-medium text-gray-800">Gestión de WhatsApp</span>
    </nav>

    <!-- Encabezado -->
    <div class="mb-8 flex flex-wrap items-center justify-between">
        <h1 class="text-3xl font-bold text-gray-800">Gestión de WhatsApp</h1>
        <div class="flex space-x-3">
            <a href="@Url.Action("EnviarMensaje")" class="flex items-center rounded-lg bg-green-600 px-4 py-2 font-medium text-white shadow transition hover:bg-green-700">
                <i class="fas fa-comment mr-2"></i> Enviar Mensaje
            </a>
            <a href="@Url.Action("EnviarMensajeMasivo")" class="flex items-center rounded-lg bg-blue-600 px-4 py-2 font-medium text-white shadow transition hover:bg-blue-700">
                <i class="fas fa-users mr-2"></i> Mensajes Masivos
            </a>
            <a href="@Url.Action("ConfigurarChatbot")" class="flex items-center rounded-lg bg-purple-600 px-4 py-2 font-medium text-white shadow transition hover:bg-purple-700">
                <i class="fas fa-robot mr-2"></i> Configurar Chatbot
            </a>
            <a href="@Url.Action("Estadisticas")" class="flex items-center rounded-lg bg-indigo-600 px-4 py-2 font-medium text-white shadow transition hover:bg-indigo-700">
                <i class="fas fa-chart-bar mr-2"></i> Estadísticas
            </a>
        </div>
    </div>

    <!-- Mensajes de notificación -->
    @if (TempData["Message"] != null)
    {
        <div class="mb-6 rounded-lg bg-green-100 p-4 text-green-700">
            <div class="flex items-center">
                <i class="fas fa-check-circle mr-2"></i>
                <span>@TempData["Message"]</span>
            </div>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="mb-6 rounded-lg bg-red-100 p-4 text-red-700">
            <div class="flex items-center">
                <i class="fas fa-exclamation-circle mr-2"></i>
                <span>@TempData["Error"]</span>
            </div>
        </div>
    }

    <!-- Búsqueda -->
    <div class="mb-6">
        <form action="@Url.Action("BuscarConversaciones")" method="get" class="flex max-w-xl">
            <input type="text" name="termino" class="w-full rounded-l-lg border border-gray-300 bg-white px-4 py-2 focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500" placeholder="Buscar por teléfono, nombre o contenido...">
            <button type="submit" class="rounded-r-lg bg-gray-200 px-4 py-2 text-gray-700 hover:bg-gray-300">
                <i class="fas fa-search"></i>
            </button>
        </form>
    </div>

    <!-- Conversaciones Recientes -->
    <div class="overflow-hidden rounded-xl bg-white shadow-lg">
        <div class="border-b border-gray-200 bg-gray-50 px-6 py-4">
            <h2 class="text-lg font-semibold text-gray-800">Conversaciones Recientes</h2>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Contacto</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Teléfono</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Usuario</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Última Actividad</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Estado</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Acciones</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 bg-white">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-900">
                                    @item.NOMBRE_CONTACTO
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    <span class="flex items-center">
                                        <i class="fab fa-whatsapp mr-1 text-green-500"></i>
                                        @item.NUMERO_TELEFONO
                                    </span>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    @(item.Usuario != null ? item.Usuario.NOMBRE_COMPLETO : "No vinculado")
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    @item.ULTIMA_ACTUALIZACION.ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
                                    @{
                                        string claseBadge = "bg-green-100 text-green-800";

                                        if (item.ESTADO == "Resuelto")
                                        {
                                            claseBadge = "bg-blue-100 text-blue-800";
                                        }
                                        else if (item.ESTADO == "Pausado")
                                        {
                                            claseBadge = "bg-yellow-100 text-yellow-800";
                                        }
                                    }
                                    <span class="rounded-full @claseBadge px-3 py-1 text-xs font-medium">
                                        @item.ESTADO
                                    </span>
                                </td>
                                <td class="whitespace-nowrap px-6 py-4 text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <a href="@Url.Action("Conversacion", new { telefono = item.NUMERO_TELEFONO })" class="rounded-full bg-green-100 p-2 text-green-600 transition hover:bg-green-200" title="Ver conversación">
                                            <i class="fas fa-comments"></i>
                                        </a>
                                        <a href="@Url.Action("ExportarConversacion", new { id = item.ID_CONVERSACION })" class="rounded-full bg-blue-100 p-2 text-blue-600 transition hover:bg-blue-200" title="Exportar conversación">
                                            <i class="fas fa-file-export"></i>
                                        </a>
                                        <button type="button"
                                                onclick="cambiarEstado(@item.ID_CONVERSACION, '@(item.ESTADO == "Activo" ? "Resuelto" : "Activo")')"
                                                class="rounded-full bg-indigo-100 p-2 text-indigo-600 transition hover:bg-indigo-200"
                                                title="@(item.ESTADO == "Activo" ? "Marcar como resuelto" : "Reactivar conversación")">
                                            <i class="fas @(item.ESTADO == "Activo" ? "fa-check" : "fa-redo")"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="py-10 text-center text-gray-500">
                                <div class="flex flex-col items-center justify-center">
                                    <i class="fas fa-comments text-4xl text-gray-300 mb-3"></i>
                                    <p>No hay conversaciones registradas en el sistema.</p>
                                    <a href="@Url.Action("EnviarMensaje")" class="mt-2 text-indigo-600 hover:underline">Enviar un nuevo mensaje</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Función para cambiar el estado de una conversación
        function cambiarEstado(id, estado) {
            if (confirm('¿Está seguro que desea cambiar el estado de esta conversación a ' + estado + '?')) {
                fetch('@Url.Action("CambiarEstadoConversacion")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ id: id, estado: estado })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Refrescar la página para ver los cambios
                        location.reload();
                    } else {
                        alert('Error al cambiar el estado: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Ha ocurrido un error al procesar la solicitud.');
                });
            }
        }
    </script>
}